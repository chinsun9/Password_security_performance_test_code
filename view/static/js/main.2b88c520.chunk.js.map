{"version":3,"sources":["components/Header.tsx","components/InputForm.tsx","components/LoadingIcon.tsx","components/Main.tsx","hook/useStateWithHistory.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Style","styled","header","Header","form","InputForm","title","value","onChange","onSubmit","type","placeholder","onClick","LoadingIcon","xmlns","xmlnsXlink","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","begin","values","keyTimes","dur","repeatCount","main","Main","containerRef","useRef","useState","inputPassword","setInputPassword","defaultValue","capacity","setValue","historyRef","pointerRef","set","useCallback","v","resolvedValue","current","length","splice","push","shift","back","forward","go","index","history","pointer","useStateWithHistory","result","setResult","isLoading","setIsLoading","isError","setIsError","onSubmitHandler","e","a","preventDefault","console","log","trim","fetch","encodeURIComponent","then","res","json","apiResult","state","error","useEffect","querySelector","focus","ref","className","target","JSON","stringify","predictPoint","password","comment","map","c","recommended","idx","undefined","display","join","div","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b88c520.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\nimport React from 'react';\r\n\r\nconst Style = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 1.2rem 1.6rem;\r\n  box-shadow: 0 1px 0 0 #e5e5e5;\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <Style>\r\n      <h2>✔️ Check Password</h2>\r\n    </Style>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","/* eslint-disable react/require-default-props */\r\nimport styled from '@emotion/styled';\r\nimport React from 'react';\r\n\r\nconst Style = styled.form`\r\n  display: flex;\r\n  place-items: center;\r\n  margin: 4em 0;\r\n\r\n  input,\r\n  button {\r\n    padding: 1rem 1.6rem;\r\n    outline: none;\r\n    background-color: transparent;\r\n    border: 1px solid hsl(0, 0%, 80%);\r\n    font-size: 1.4rem;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n  }\r\n\r\n  button {\r\n    background-color: #21dc6d;\r\n    border-color: hsl(144.3850267379679, 93.91304347826087%, 49.6078431372549%);\r\n    color: white;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  title: string;\r\n  value: string;\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onSubmit: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n};\r\n\r\nfunction InputForm({ title, value, onChange, onSubmit }: Props) {\r\n  return (\r\n    <Style>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        placeholder={title}\r\n        onChange={onChange}\r\n      />\r\n      <button type=\"submit\" onClick={onSubmit}>\r\n        Enter\r\n      </button>\r\n    </Style>\r\n  );\r\n}\r\n\r\nexport default InputForm;\r\n","import React from 'react';\r\n\r\n// icon from https://loading.io/\r\nfunction LoadingIcon() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      width=\"200px\"\r\n      height=\"200px\"\r\n      viewBox=\"0 0 100 100\"\r\n      preserveAspectRatio=\"xMidYMid\"\r\n    >\r\n      <g transform=\"translate(50,50)\">\r\n        <g transform=\"rotate(0)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"12\" fill=\"#1d3f72\" fillOpacity=\"1\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"0s\"\r\n              values=\"0.01 0.01;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n            <animate\r\n              attributeName=\"fill-opacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"0s\"\r\n            />\r\n          </circle>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default LoadingIcon;\r\n","import styled from '@emotion/styled';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport InputForm from './InputForm';\r\nimport LoadingIcon from './LoadingIcon';\r\nimport useStateWithHistory from 'hook/useStateWithHistory';\r\n\r\nconst Style = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4em;\r\n  place-items: center;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  max-width: 1000px;\r\n  padding: 0 2rem;\r\n  margin: auto;\r\n\r\n  .input,\r\n  .result {\r\n    width: 100%;\r\n  }\r\n\r\n  .input input:focus {\r\n    border-color: #21dc6d;\r\n  }\r\n\r\n  .result {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-content: flex-start;\r\n    gap: 1rem;\r\n    overflow: hidden;\r\n    margin: 1rem 1.6rem;\r\n    padding: 1rem 1.6rem;\r\n    border: 1px solid;\r\n    border-color: green;\r\n\r\n    .display {\r\n      color: green;\r\n    }\r\n\r\n    .result-header {\r\n      display: flex;\r\n      width: 100%;\r\n      justify-content: space-between;\r\n    }\r\n\r\n    &.warn {\r\n      border-color: red;\r\n\r\n      .display {\r\n        color: red;\r\n      }\r\n    }\r\n\r\n    .key {\r\n      color: #2096fd;\r\n    }\r\n\r\n    .recommended-item::before {\r\n      content: '- ';\r\n    }\r\n  }\r\n\r\n  .history {\r\n    width: 100%;\r\n  }\r\n\r\n  .error {\r\n    font-style: italic;\r\n  }\r\n`;\r\n\r\ntype ResultType = {\r\n  password: string;\r\n  predictPoint: number;\r\n  comment: string[];\r\n  recommended: string[];\r\n};\r\n\r\nfunction Main() {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [inputPassword, setInputPassword] = useState('');\r\n  const [result, setResult, { history }] = useStateWithHistory<ResultType>();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState<any>(false);\r\n\r\n  const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputPassword(e.target.value);\r\n  };\r\n\r\n  const onSubmitHandler = async (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n  ): Promise<void> => {\r\n    e.preventDefault();\r\n    console.log(e, inputPassword);\r\n    if (inputPassword.trim().length < 1) {\r\n      console.log('not empty');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n\r\n      const apiResult = await fetch(\r\n        `/validation?password=${encodeURIComponent(inputPassword.trim())}`,\r\n      ).then((res) => res.json());\r\n      setIsLoading(false);\r\n\r\n      console.log({ apiResult });\r\n\r\n      if (apiResult.state === 310) {\r\n        console.log('invalid');\r\n        setIsError(apiResult);\r\n\r\n        return;\r\n      }\r\n\r\n      setResult(apiResult);\r\n    } catch (error) {\r\n      console.log({ error });\r\n      setIsError(error as any);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!containerRef.current) return;\r\n\r\n    containerRef.current\r\n      .querySelector<HTMLInputElement>('.input input')\r\n      ?.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <Style ref={containerRef}>\r\n      <div className=\"input\">\r\n        <InputForm\r\n          title=\"input your password\"\r\n          value={inputPassword}\r\n          onChange={onChangeHandler}\r\n          onSubmit={onSubmitHandler}\r\n        />\r\n      </div>\r\n\r\n      {isLoading && <LoadingIcon />}\r\n      {isError && (\r\n        <div className=\"error\">{JSON.stringify(isError, null, 2)}</div>\r\n      )}\r\n      {!isLoading && !isError && result && (\r\n        <div className={`result${result.predictPoint < 0.5 ? ' warn' : ''}`}>\r\n          <div className=\"result-header\">\r\n            <h3>\r\n              <span className=\"key\">`{result.password}`</span> 보안성 점수 :\r\n              {` ${result.predictPoint} `}\r\n              <span className=\"display\">\r\n                {result.predictPoint < 0.5 ? '미흡' : '우수'}\r\n              </span>\r\n            </h3>\r\n\r\n            <small>0 ~ 0.5 미흡 / 0.5 ~ 1 우수</small>\r\n          </div>\r\n          <div className=\"comment\">\r\n            {result.comment.map((c) => (\r\n              <div key={c} className=\"comment-item\">\r\n                <b>{c}</b>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"recommended\">\r\n            <h5>추천 비밀번호</h5>\r\n            {result.recommended.map((r) => (\r\n              <div key={r} className=\"recommended-item\">\r\n                {r}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"history\">\r\n        {history.map((r, idx) => {\r\n          if (r === undefined) return null;\r\n          const { password, predictPoint } = r;\r\n\r\n          const display = predictPoint < 0.5 ? '미흡' : '우수';\r\n          return (\r\n            <div key={`${r?.password}${idx + 1}`}>\r\n              {[password, display].join(' / ')}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </Style>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { useCallback, useRef, useState } from 'react';\r\n\r\ntype RT<T> = [\r\n  T | undefined,\r\n  (v: T) => void,\r\n  {\r\n    history: (T | undefined)[];\r\n    pointer: number;\r\n    back: () => void;\r\n    forward: () => void;\r\n    go: (index: any) => void;\r\n  },\r\n];\r\n\r\nexport default function useStateWithHistory<T>(\r\n  defaultValue?: T,\r\n  { capacity = 10 } = {},\r\n): RT<T> {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const historyRef = useRef([value]);\r\n  const pointerRef = useRef(0);\r\n\r\n  const set = useCallback(\r\n    (v) => {\r\n      const resolvedValue = typeof v === 'function' ? v(value) : v;\r\n      if (historyRef.current[pointerRef.current] !== resolvedValue) {\r\n        if (pointerRef.current < historyRef.current.length - 1) {\r\n          historyRef.current.splice(pointerRef.current + 1);\r\n        }\r\n        historyRef.current.push(resolvedValue);\r\n\r\n        while (historyRef.current.length > capacity) {\r\n          historyRef.current.shift();\r\n        }\r\n        pointerRef.current = historyRef.current.length - 1;\r\n      }\r\n      setValue(resolvedValue);\r\n    },\r\n    [capacity, value],\r\n  );\r\n\r\n  const back = useCallback(() => {\r\n    if (pointerRef.current <= 0) return;\r\n    pointerRef.current -= 1;\r\n    setValue(historyRef.current[pointerRef.current]);\r\n  }, []);\r\n\r\n  const forward = useCallback(() => {\r\n    if (pointerRef.current >= historyRef.current.length - 1) return;\r\n    pointerRef.current += 1;\r\n    setValue(historyRef.current[pointerRef.current]);\r\n  }, []);\r\n\r\n  const go = useCallback((index) => {\r\n    if (index < 0 || index > historyRef.current.length - 1) return;\r\n    pointerRef.current = index;\r\n    setValue(historyRef.current[pointerRef.current]);\r\n  }, []);\r\n\r\n  return [\r\n    value,\r\n    set,\r\n    {\r\n      history: historyRef.current,\r\n      pointer: pointerRef.current,\r\n      back,\r\n      forward,\r\n      go,\r\n    },\r\n  ];\r\n}\r\n","import styled from '@emotion/styled';\r\nimport React from 'react';\r\nimport Header from 'components/Header';\r\nimport Main from 'components/Main';\r\n\r\nconst Style = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto 1fr auto;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst App = () => (\r\n  <Style>\r\n    <Header />\r\n    <Main />\r\n  </Style>\r\n);\r\n\r\nexport default App;\r\n","/* eslint-disable */\r\nimport { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}